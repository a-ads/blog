variables:
  PROD_BUCKET: "a-ads-blog"
  STAGE_BUCKET: "a-ads-staging-blog"
  AWS_DEFAULT_REGION: eu-central-1
  REGISTRY_HOST: 461602623056.dkr.ecr.eu-central-1.amazonaws.com
  DOCKER_DRIVER: overlay2
  SSH_PORT: 10115
  TMPDIR: /tmp

image: node:12-alpine




production_deploy:
  before_script:
    - node -v
    - npm install npm@6.14.16 -g
    - npm install

#sed -i -e 's/v3\.11/v3.12/g' /etc/apk/repositories # removed now
  script:
    - set -e -x
    - apk upgrade --available
    - apk add --update --no-cache build-base
    - apk add --update --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/v3.12/main/ libpng-dev fftw-dev python3-dev libimagequant-dev
    - apk add --update --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/v3.12/community/ vips-dev
    - node_modules/.bin/gatsby build --prefix-paths
    - apk add --no-cache --update python3 aws-cli
    - aws s3 cp ./public/ s3://$PROD_BUCKET/blog/ --recursive --acl public-read
    - aws s3 cp --content-type="text/vnd.yaml" --acl public-read --metadata-directive="REPLACE" s3://$PROD_BUCKET/blog/admin/config.yml s3://$PROD_BUCKET/blog/admin/config.yml
  only:
    - master  




staging_deploy:
  when: manual
  retry: 1
  image: $REGISTRY_HOST/aads-ci-blog

  services:
    - $REGISTRY_HOST/aads-ci-blog

  stage: deploy

  before_script:
    - echo 'Starting deploy to staging'

  only:
    - staging

  script:
    # Update blog
    - cd /data
    - node_modules/.bin/gatsby build --prefix-paths
    - aws s3 cp ./public/ s3://$STAGE_BUCKET/blog/ --recursive --acl public-read
    - aws s3 cp --content-type="text/vnd.yaml" --acl public-read --metadata-directive="REPLACE" s3://$STAGE_BUCKET/blog/admin/config.yml s3://$STAGE_BUCKET/blog/admin/config.yml




build image:
  stage: build
  image: ubuntu:22.04
  when: manual
  allow_failure: false
  services:
    - docker:20-dind
  only:
    - staging
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ''
    TMPDIR: ''

  before_script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata awscli docker.io

  script:
    - eval $(aws ecr get-login --no-include-email)
    - docker build
        --tag $REGISTRY_HOST/aads-ci-blog:latest .
    - docker push $REGISTRY_HOST/aads-ci-blog:latest